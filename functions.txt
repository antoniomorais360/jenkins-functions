
function ping_url () {

#Example: pingurl "My Site Friendly Name" https://mysite.com

sitename=$1
url2check=$2


#PING url variables
connecttimeout=30

echo 
echo Testing $1

response_code=`curl --insecure --write-out %{http_code} --silent --connect-timeout $connecttimeout --no-keepalive --output /dev/null  $url2check`
  
  if [ "$response_code" != "200" ] && [ "$response_code" != "404" ] && [ "$response_code" != "401" ] && [ "$response_code" != "301" ] ; then

			printf "$1 is *** OFFLINE *** \n"
			exit 1
            
  else
  	printf "$1 is ONLINE ($response_code)\n"
    echo ""
  fi;

ping_url=$response_code 

}


function check_cpu () {

ipnumber=$1

#CPU variables
cpulimit=80
timing=7
cpuusage=100



	cpuusage=$(sudo -u ubuntu ssh $1 mpstat $timing 1 | tail -1|awk '{print int($2)}')
	cpuusage=$(echo ${cpuusage%,*})
	printf "$1 estÃ¡ usando $cpuusage%% de CPU\n\n"



if (( $cpuusage -gt $cpulimit )); then 
	exit 1        
fi



}


function aws_running_instances () {

aws ec2 describe-instances  --filter "Name=instance-state-name,Values=running" \
	--query "Reservations[*].Instances[*].[InstanceId, PrivateIpAddress, PublicIpAddress, InstanceType, State.Name, Tags[?Key=='Name'].Value|[0],Tags[?Key=='SO'].Value|[0], Platform]"  --output text > aws_running_instances.txt


cat aws_running_instances.txt | awk '{print $6}'  > aws_running_instances_name.txt
cat aws_running_instances.txt | awk '{print $2}'  > aws_running_instances_priv_ip.txt
cat aws_running_instances.txt | awk '{print $3}'  > aws_running_instances_public_ip.txt

}









