
function ping_url () {

#Example: ping_url "My Site Friendly Name" https://mysite.com

sitename=$1
url2check=$2


#PING url variables
connecttimeout=30

echo 
echo Testing $1

response_code=`curl --insecure --write-out %{http_code} --silent --connect-timeout $connecttimeout --no-keepalive --output /dev/null  $url2check`
  
  if [ "$response_code" != "200" ] && [ "$response_code" != "404" ] && [ "$response_code" != "401" ] && [ "$response_code" != "301" ] ; then

			printf "$1 is *** OFFLINE *** \n"
			exit 1
            
  else
  	printf "$1 is ONLINE ($response_code)\n"
    echo ""
  fi;

ping_url=$response_code 


}


function check_cpu () {

#apt install -y sysstat (mpstat)
 
ipnumber=$1

#CPU variables
test_duration=5


	cpu_idle=$(sudo -u ubuntu ssh -o StrictHostKeyChecking=no $1 mpstat $test_duration 1 | tail -1 |awk '{print int($12)}')
	cpuusage=$(echo 100 - $cpu_idle | bc)
	cpuusage=$(echo ${cpuusage%,*})
	
	check_cpu=$cpuusage
	
	printf "$1 is using $cpuusage%% of CPU\n"

}


function aws_running_instances () {

aws ec2 describe-instances  --filter "Name=instance-state-name,Values=running" \
	--query "Reservations[*].Instances[*].[InstanceId, PrivateIpAddress, PublicIpAddress, InstanceType, State.Name, Tags[?Key=='Name'].Value|[0],Tags[?Key=='SO'].Value|[0], Platform]"  --output text > aws_running_instances.txt

}



function test_volume() {

#Example: test_volume "Wordpress" /

instancename=$1
hostip=$2
pathvolume=$3



	echo $instancename ($hostip)
	test_volume=$(sudo -u ubuntu ssh -o StrictHostKeyChecking=no -o LogLevel=error $2 df $pathvolume | grep -o "[0-9][0-9]"% |  grep -o "[0-9][0-9]" )
	printf "$test_volume%%\n"
	
}





